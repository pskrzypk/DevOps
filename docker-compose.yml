version: '3'

networks:
    mymulticont:
        name: mymulticont

services:

    myredis:
        container_name: myredis
        image: 'redis:alpine'
        networks:
            - mymulticont

    mypostgres:
        container_name: mypostgres
        image: 'postgres:alpine'
        networks:
            - mymulticont
        environment:
            POSTGRES_PASSWORD: '1qaz2wsx'
            POSTGRES_DB: 'myappdb'
            POSTGRES_USER: 'myappuser'
            POSTGRES_HOST: 'mypostgres'
        volumes:
            - C:\Users\Gorlist\Desktop\Semestr4\DevOps\webapp\postgresdata:/var/lib/postgresql/data

    mybackend:
        container_name: mybackend
        restart: always
        networks:
            - mymulticont
        build:
            dockerfile: Dockerfile
            context: ./mybackend
        volumes:
            - C:\Users\Gorlist\Desktop\Semestr4\DevOps\webapp\mybackend\node_modules:/opt/myapp/node_modules
            #- C:\Users\Gorlist\Desktop\Semestr4\DevOps\webapp\mybackend\node_modules
            - C:\Users\Gorlist\Desktop\Semestr4\DevOps\webapp\mybackend:/opt/myapp
        environment:
            POSTGRES_PASSWORD: '1qaz2wsx'
            POSTGRES_DB: 'myappdb'
            POSTGRES_USER: 'myappuser'
            POSTGRES_HOST: 'mypostgres'
            REDIS_HOST: 'myredis'
        ports:
            - 8090:5000
        depends_on:
            - mypostgres
            - myredis

